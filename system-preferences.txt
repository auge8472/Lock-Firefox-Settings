
// Set a startup page i.e. to notoce the user for closing the browser after use.
// The page should be stored in a location, with restricted access for the user root/administrator
// specify the homepage
lockPref("browser.startup.homepage", "http://example.org/index.html");
// forbid to alter the above specified startup page
lockPref("browser.startup.page", 1);

// enforce a private session to protect the data of the user against access through other users
// private session is enabled by default
lockPref("browser.privatebrowsing.autostart", true);
// enable privacy session for following features
lockPref("privacy.item.cache", true);
lockPref("privacy.item.cookies", true);
lockPref("privacy.item.downloads", true);
lockPref("privacy.item.formdata", true);
lockPref("privacy.item.history", true);
lockPref("privacy.item.offlineApps", true);
lockPref("privacy.item.passwords", true);
lockPref("privacy.item.sessions", true);
// clear data when closing the browser
lockPref("privacy.clearOnShutdown.cache", true);
lockPref("privacy.clearOnShutdown.cookies", true);
lockPref("privacy.clearOnShutdown.downloads", true);
lockPref("privacy.clearOnShutdown.formdata", true);
lockPref("privacy.clearOnShutdown.history", true);
lockPref("privacy.clearOnShutdown.passwords", true);
lockPref("privacy.clearOnShutdown.sessions", true);
lockPref("privacy.clearOnShutdown.siteSettings", true);
lockPref("privacy.clearOnShutdown.offlineApps", true);

// show dialogs to clear user data inside a browser session
lockPref("privacy.cpd.cache", true);
lockPref("privacy.cpd.cookies", true);
lockPref("privacy.cpd.downloads", true);
lockPref("privacy.cpd.formdata", true);
lockPref("privacy.cpd.history", true);
lockPref("privacy.cpd.offlineApps", true);
lockPref("privacy.cpd.passwords", true);
lockPref("privacy.cpd.sessions", true);
lockPref("privacy.cpd.sessions", true);
lockPref("privacy.cpd.siteSettings", true);

// tab bar behaviour
// enforce to display the tab bar in case of only one open tab
lockPref("browser.tabs.autoHide", false);
// do not close the browser window if the last tab is closed
lockPref("browser.tabs.closeWindowWithLastTab", false);
// open new tabs in background
lockPref("browser.tabs.loadInBackground", true);
// open a new tab with a click of the middle mouse button
lockPref("browser.tabs.opentabfor.middleclick", true);
// disable the warning about closing several tabs if the browser should be closed
lockPref("browser.tabs.warnOnClose", false);
// enable the warning about slowing down the browser when opening additional tabs
lockPref("browser.tabs.warnOnOpen", true);
// set the number of tabs before warning about slow down
lockPref("browser.tabs.maxOpenBeforeWarn", 12);

// JavaScript behaviour and restrictions
// enable JavaScript
lockPref("javascript.enabled", true);
// block unrequested JavaScript popups while opening an URL
lockPref("dom.disable_open_during_load", true);
// JavaScript is not allowed to resize a window or move it to background
lockPref("dom.disable_window_move_resize", true);
// JavaScript is not alowed to close a window
lockPref("dom.allow_scripts_to_close_windows", false);
// prevent hiding of the context menu via JavaScript
lockPref("dom.event.contextmenu.enabled", false);

// deactivate dom storage
// disable dom storage cookies
lockPref("dom.storage.enabled", false);
// explicitely set dom storage size to 0
lockPref("dom.storage.default_quota", 0);

// set browser cache and a fix disk quota
// enable cache
lockPref("browser.cache.disk.enable", true);
// disable automatic adjustment of disk quota
lockPref("browser.cache.disk.smart_size.enabled", false);
// size of the browser cache is 16 MByte
lockPref("browser.cache.disk.capacity", 16384);

